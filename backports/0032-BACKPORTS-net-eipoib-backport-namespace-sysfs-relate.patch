From: Erez Shitrit <erezsh@mellanox.com>
Subject: [PATCH] BACKPORTS: net/eipoib: backport namespace/sysfs related code to 2.6.32

In the upstream kernel eIPoIB uses the default network namespace
for some of the sysfs entries it creates. In 2.6.32 this framework
doesn't exist and hence we just patch that out.

Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
---
 drivers/net/eipoib/eth_ipoib.h       |    5 +++++
 drivers/net/eipoib/eth_ipoib_main.c  |   15 +++++++++++++++
 drivers/net/eipoib/eth_ipoib_sysfs.c |   33 +++++++++++++++++++++++++++++++++
 3 files changed, 53 insertions(+), 0 deletions(-)

diff --git a/drivers/net/eipoib/eth_ipoib.h b/drivers/net/eipoib/eth_ipoib.h
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/eipoib/eth_ipoib.h
+++ b/drivers/net/eipoib/eth_ipoib.h
@@ -232,8 +232,13 @@ extern int eipoib_net_id;
 extern struct list_head parent_dev_list;
 
 /* functions prototypes */
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 int mod_create_sysfs(struct eipoib_net *eipoib_n);
 void mod_destroy_sysfs(struct eipoib_net *eipoib_n);
+#else
+int mod_create_sysfs(void);
+void mod_destroy_sysfs(void);
+#endif
 void parent_destroy_sysfs_entry(struct parent *parent);
 int parent_create_sysfs_entry(struct parent *parent);
 int create_slave_symlinks(struct net_device *master,
diff --git a/drivers/net/eipoib/eth_ipoib_main.c b/drivers/net/eipoib/eth_ipoib_main.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/eipoib/eth_ipoib_main.c
+++ b/drivers/net/eipoib/eth_ipoib_main.c
@@ -76,6 +76,7 @@ static const char * const version =
 
 LIST_HEAD(parent_dev_list);
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 /* name space sys/fs functions */
 int eipoib_net_id __read_mostly;
 
@@ -103,6 +104,7 @@ static struct pernet_operations eipoib_net_ops = {
 	.id   = &eipoib_net_id,
 	.size = sizeof(struct eipoib_net),
 };
+#endif
 
 /* set mac fields emac=<qpn><lid> */
 static inline
@@ -2477,7 +2479,11 @@ static int __init mod_init(void)
 
 	pr_info(DRV_NAME": %s", version);
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 	rc = register_pernet_subsys(&eipoib_net_ops);
+#else
+	rc = mod_create_sysfs();
+#endif
 	if (rc)
 		goto out;
 
@@ -2495,7 +2501,12 @@ static int __init mod_init(void)
 	goto out;
 
 unreg_subsys:
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 	unregister_pernet_subsys(&eipoib_net_ops);
+#else
+	mod_destroy_sysfs();
+#endif
+
 out:
 	return rc;
 
@@ -2505,7 +2516,11 @@ static void __exit mod_exit(void)
 {
 	unregister_netdevice_notifier(&parent_netdev_notifier);
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 	unregister_pernet_subsys(&eipoib_net_ops);
+#else
+	mod_destroy_sysfs();
+#endif
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,36))
 	eth_ipoib_handle_frame_hook = NULL;
diff --git a/drivers/net/eipoib/eth_ipoib_sysfs.c b/drivers/net/eipoib/eth_ipoib_sysfs.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/eipoib/eth_ipoib_sysfs.c
+++ b/drivers/net/eipoib/eth_ipoib_sysfs.c
@@ -74,8 +74,12 @@ static int get_emac(u8 *mac, char *s)
 }
 
 /* show/store functions per module (CLASS_ATTR) */
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 static ssize_t show_parents(struct class *cls, struct class_attribute *attr,
 			    char *buf)
+#else
+static ssize_t show_parents(struct class *cls, char *buf)
+#endif
 {
 	char *p = buf;
 	struct parent *parent;
@@ -467,6 +471,7 @@ static struct attribute *per_parent_attrs[] = {
 	NULL,
 };
 
+#if ((LINUX_VERSION_CODE > KERNEL_VERSION(3,1,0)))
 /* name spcase  support */
 static const void *eipoib_namespace(struct class *cls,
 				    const struct class_attribute *attr)
@@ -476,6 +481,7 @@ static const void *eipoib_namespace(struct class *cls,
 			     struct eipoib_net, class_attr_eipoib_interfaces);
 	return eipoib_n->net;
 }
+#endif
 
 static struct attribute_group parent_group = {
 	/* per parent sysfs files under: /sys/class/net/<IF>/eth/.. */
@@ -511,6 +517,7 @@ void destroy_slave_symlinks(struct net_device *master,
 	sysfs_remove_link(&(master->dev.kobj), linkname);
 }
 
+#if ((LINUX_VERSION_CODE > KERNEL_VERSION(3,1,0)))
 static struct class_attribute class_attr_eth_ipoib_interfaces = {
 	.attr = {
 		.name = "eth_ipoib_interfaces",
@@ -519,11 +526,20 @@ static struct class_attribute class_attr_eth_ipoib_interfaces = {
 	.show = show_parents,
 	.namespace = eipoib_namespace,
 };
+#else
+static CLASS_ATTR(eth_ipoib_interfaces,  S_IRUGO,
+		  show_parents, NULL);
+#endif
 
 /* per module sysfs file under: /sys/class/net/eth_ipoib_interfaces */
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 int mod_create_sysfs(struct eipoib_net *eipoib_n)
+#else
+int mod_create_sysfs(void)
+#endif
 {
 	int rc;
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 	/* defined in CLASS_ATTR(eth_ipoib_interfaces..) */
 	eipoib_n->class_attr_eipoib_interfaces =
 		class_attr_eth_ipoib_interfaces;
@@ -531,16 +547,33 @@ int mod_create_sysfs(struct eipoib_net *eipoib_n)
 	sysfs_attr_init(&eipoib_n->class_attr_eipoib_interfaces.attr);
 
 	rc = netdev_class_create_file(&eipoib_n->class_attr_eipoib_interfaces);
+#else
+	struct class_attribute *cattr = &class_attr_eth_ipoib_interfaces;
+	rc = netdev_class_create_file(cattr);
+#endif
 	if (rc)
 		pr_err("%s failed to create sysfs (rc %d)\n",
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 		       eipoib_n->class_attr_eipoib_interfaces.attr.name, rc);
+#else
+			 __func__, rc);
+#endif
 
 	return rc;
 }
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 void mod_destroy_sysfs(struct eipoib_net *eipoib_n)
+#else
+void mod_destroy_sysfs(void)
+#endif
 {
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
 	netdev_class_remove_file(&eipoib_n->class_attr_eipoib_interfaces);
+#else
+	struct class_attribute *cattr = &class_attr_eth_ipoib_interfaces;
+	netdev_class_remove_file(cattr);
+#endif
 }
 
 int parent_create_sysfs_entry(struct parent *parent)
