From: Saeed Mahameed <saeedm@mellanox.com>
Subject: [PATCH] BACKPORT: mlx4_vnic ethtool

---
 .../mellanox/mlx4_vnic/vnic_data_ethtool.c         |  106 ++++++++++++++++++++
 1 files changed, 106 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_ethtool.c b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_ethtool.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_ethtool.c
@@ -147,6 +147,91 @@ static int vnic_set_coalesce(struct net_device *dev,
 	return 0;
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,3,0))
+
+static u32 vnic_get_rx_csum(struct net_device *dev)
+{
+	struct vnic_login *login = vnic_netdev_priv(dev);
+
+	return login->rx_csum;
+}
+
+static int vnic_set_rx_csum(struct net_device *dev, u32 data)
+{
+	struct vnic_login *login = vnic_netdev_priv(dev);
+
+	login->rx_csum = (data != 0);
+
+	return 0;
+}
+
+static u32 vnic_get_tx_csum(struct net_device *dev)
+{
+	return (dev->features & NETIF_F_IP_CSUM) != 0;
+}
+
+static int vnic_set_tx_csum(struct net_device *dev, u32 data)
+{
+	struct vnic_login *login = vnic_netdev_priv(dev);
+
+	/* check capability bit of SWP */
+	if (!(login->port->dev->mdev->dev->caps.flags & MLX4_DEV_CAP_FLAG_UD_SWP))
+		return -EPERM;
+
+	if (data)
+		dev->features |= NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM;
+	else
+		dev->features &= ~(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
+
+	return 0;
+}
+
+static u32 vnic_get_tso(struct net_device *dev)
+{
+	return (dev->features & NETIF_F_TSO) != 0;
+}
+
+static int vnic_set_tso(struct net_device *dev, u32 data)
+{
+	if (data)
+		dev->features |= (NETIF_F_TSO | NETIF_F_TSO6);
+	else
+		dev->features &= ~(NETIF_F_TSO | NETIF_F_TSO6);
+
+	return 0;
+}
+
+#ifndef _BP_ETHTOOL_NO_GSFLAGS
+#if !(defined(NETIF_F_GRO) && !defined(_BP_NO_GRO))
+static int vnic_set_flags(struct net_device *dev, u32 data)
+{
+	int rc = 0, changed = 0;
+
+	if (data & ~ETH_FLAG_LRO)
+		return -EOPNOTSUPP;
+
+	if (data & ETH_FLAG_LRO) {
+		if (vnic_lro_num == 0)
+			return -EOPNOTSUPP;
+		if (!(dev->features & NETIF_F_LRO))
+			changed = 1;
+	} else if (dev->features & NETIF_F_LRO) {
+		changed = 1;
+	}
+
+	if (changed) {
+		dev->features ^= NETIF_F_LRO;
+		/* stop/start interface to cleanup any pending LRO sessions */
+		rc = vnic_restart(dev);
+	}
+
+	return rc;
+}
+#endif
+#endif
+
+#endif
+
 static int vnic_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 {
 	cmd->autoneg = AUTONEG_DISABLE;
@@ -324,5 +409,26 @@ static struct ethtool_ops vnic_ethtool_ops = {
 	.get_wol = vnic_get_wol,
 	.get_ringparam = vnic_get_ringparam,
 	.set_ringparam = NULL,
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,3,0))
+	.get_sg = ethtool_op_get_sg,
+	.set_sg = ethtool_op_set_sg,
+	.get_tx_csum = vnic_get_tx_csum,
+	.set_tx_csum = vnic_set_tx_csum,
+	.get_rx_csum = vnic_get_rx_csum,
+	.set_rx_csum = vnic_set_rx_csum,
+	.get_ufo = ethtool_op_get_ufo,
+	.set_ufo = ethtool_op_set_ufo,
+#ifndef _BP_ETHTOOL_NO_GSFLAGS
+	.get_flags = ethtool_op_get_flags,
+#if !(defined(NETIF_F_GRO) && !defined(_BP_NO_GRO))
+	.set_flags = vnic_set_flags,
+#endif
+
+#ifdef NETIF_F_TSO
+	.get_tso = vnic_get_tso,
+	.set_tso = vnic_set_tso,
+#endif
+#endif
+#endif
 };
 
