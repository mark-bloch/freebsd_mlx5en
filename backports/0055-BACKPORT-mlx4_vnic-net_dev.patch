From: Saeed Mahameed <saeedm@mellanox.com>
Subject: [PATCH] BACKPORT: mlx4_vnic net_dev

---
 .../ethernet/mellanox/mlx4_vnic/vnic_data_netdev.c |   35 ++++++++++++++++++-
 .../net/ethernet/mellanox/mlx4_vnic/vnic_data_rx.c |    8 ++++-
 2 files changed, 40 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_netdev.c b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_netdev.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_netdev.c
@@ -35,6 +35,7 @@
 
 extern struct net_device_stats *mlx4_vnic_stats_func_container(struct net_device *n);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0))
 static int mlx4_vnic_vlan_rx_add_vid(struct net_device *dev, unsigned short vid)
 {
 	struct vnic_login *login = vnic_netdev_priv(dev);
@@ -50,6 +51,21 @@ static int mlx4_vnic_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid
 	vnic_dbg_data(login->name, "Kill VID:%d was called\n", vid);
 	return 0;
 }
+#else
+static void mlx4_vnic_vlan_rx_add_vid(struct net_device *dev, unsigned short vid)
+{
+	struct vnic_login *login = vnic_netdev_priv(dev);
+
+	vnic_dbg_data(login->name, "add VLAN:%d was called\n", vid);
+}
+
+static void mlx4_vnic_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)
+{
+	struct vnic_login *login = vnic_netdev_priv(dev);
+
+	vnic_dbg_data(login->name, "Kill VID:%d was called\n", vid);
+}
+#endif
 
 void vnic_carrier_update(struct vnic_login *login)
 {
@@ -835,7 +851,11 @@ static struct net_device_ops vnic_netdev_ops = {
 	.ndo_stop = vnic_stop,
 	.ndo_start_xmit = vnic_tx,
 	.ndo_get_stats = vnic_get_stats,
-	.ndo_set_rx_mode = vnic_set_multicast_list,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0)
+        .ndo_set_rx_mode = vnic_set_multicast_list,
+#else
+        .ndo_set_multicast_list = vnic_set_multicast_list,
+#endif
 	.ndo_change_mtu = vnic_change_mtu,
 	.ndo_tx_timeout = vnic_tx_timeout,
 	.ndo_set_mac_address = vnic_set_mac,
@@ -1023,11 +1043,22 @@ struct net_device *vnic_alloc_netdev(struct vnic_port *port)
 
 	vnic_set_ethtool_ops(dev);
 	/* init ethtool */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0)
 	dev->hw_features = NETIF_F_SG | NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM;
 	dev->hw_features |= NETIF_F_RXCSUM | NETIF_F_RXHASH;
 	dev->hw_features |= NETIF_F_TSO | NETIF_F_TSO6;
 	dev->features |= dev->hw_features;
-
+#else
+	do {
+		login->dev->ethtool_ops->set_rx_csum(login->dev, 1);
+		if (login->dev->ethtool_ops->set_tx_csum(login->dev, 1))
+			break;
+		if (login->dev->ethtool_ops->set_sg(login->dev, 1))
+			break;
+		if (login->dev->ethtool_ops->set_tso(login->dev, 1))
+			break;
+	} while (0);
+#endif
 	/* init NAPI (must be before LRO init) */
 	login->napi_num = login->rx_rings_num;
 	for (i = 0; i < login->napi_num; ++i) {
diff --git a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_rx.c b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_rx.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx4_vnic/vnic_data_rx.c
@@ -33,6 +33,12 @@
 #include "vnic.h"
 #include "vnic_data.h"
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0))
+#define VNIC_QUEUE_STATE_OFF QUEUE_STATE_ANY_XOFF
+#else
+#define VNIC_QUEUE_STATE_OFF __QUEUE_STATE_XOFF
+#endif
+
 static inline void free_single_frag(struct vnic_rx_ring *ring, int e,int i)
 {
 		ib_dma_unmap_single(ring->port->dev->ca,
@@ -75,7 +81,7 @@ unlock:
 	for (--i; i >= 0; --i) {
 		struct netdev_queue *txq = netdev_get_tx_queue(dev, i);
 		clear_bit(__QUEUE_STATE_FROZEN, &txq->state);
-		if (!test_bit(QUEUE_STATE_ANY_XOFF, &txq->state))
+		if (!test_bit(VNIC_QUEUE_STATE_OFF, &txq->state))
 			__netif_schedule(txq->qdisc);
 	}
 	spin_unlock(&dev->tx_global_lock);
